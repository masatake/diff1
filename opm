#!/bin/bash
#
########################################################################
#
# opm: overrides-package manager
#
# Copyright (C) 2011 Masatake YAMATO
#
# Author: Masatake YAMATO <yamato@redhat.com>
#
# program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
########################################################################

## Commentary:
#
# This package provides the similar functions of rpm -qa, rpm -qf, rpm -ql 
# and -V against overrides packages created by packagemaker.
#

function print_usage
{
    echo "Usage: "
    echo "	$0 -h|--help"
    echo "	$0 -qa"
    echo "	$0 -qf FILE"
    echo "	$0 -ql PKG"
    echo "	$0 -V PKG"
}

function qa
{
    (
	cd /var/lib
	for x in *-overrides; do
	    if [ -d $x ]; then
		echo $x
	    fi
	done
    )
    return 0
}

function qf
{
    local f=$1
    local p 

    if [[ / != ${f:0:1} ]]; then
	f=$(readlink --canonicalize $(pwd)/${f})
    fi
    
    for p in $(qa); do
	if [[ -e /var/lib/${p}/new${f} ]]; then
	    echo $p
	    return 0
	fi
    done
    return 1
}

function ql
{
    rpm -ql $1 | grep /var/lib/$1/new
    return $?
}

function V
{
    : TODO
}

function main
{
    local r=
    
    while [[ $# -gt 0 ]]; do
	case "$1" in
	    --help|-h)
		print_usage
		exit 0
		;;
            -qa)
		qa
		r=$?
		break
		;;
	    -qf)
		shift
		qf $1
		r=$?
		break
		;;
	    -ql)
		shift
		ql $1
		r=$?
		break
		;;
	    -V)
		shift
		V $1
		r=$?
		break
		;;
	    *)
		print_usage 1>&2
		r=2
		break
		;;
	esac
    done

    if [[ -z "$r" ]]; then
	print_usage 1>&2
	r=2
    fi
    
    return $r
}

main "$@"
exit $?
